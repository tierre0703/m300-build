#!/bin/sh /etc/rc.common


. /usr/share/libubox/jshn.sh

START=99
#rrdfile=/tmp/rrd/speedtest.rrd
STEP=3600  # 1hour
HEARTBEAT=7200
now=`date +%s`

IPERF_HOST_NAME=bouygues.iperf.fr
IPERF_PORT_FROM=5200
IPERF_PORT_END=5222

if [ ! -d "/tmp/rrd" ];then
	mkdir -p /tmp/rrd
	ln -s /tmp/rrd /www-comfast
fi


run_speedtest()
{
    # check setting for record interval


    #iter wan interface
    iperf_ip=$(ping -q -c 1 -t 1 ${IPERF_HOST_NAME} | grep PING | sed -e "s/).*//" | sed -e "s/.*(//")
    #iperf_ip=$(dig ${IPERF_HOST_NAME} +short)
    if [ "$iperf_ip" != "" ]; then

        index=0
        for entry in `ubus list | grep wan | cut -d . -f 3`; do

            if [ "$entry" = "wan" ]; then
                wanname=wan0
                br_name=wan
            else
                wanname=wan${index}
                br_name=wan${index}
            fi
            

            #cut wan_ip
            #"ipv4-address": [{"address": "10.100.100.131", "mask": 24}],
            wan_ip=$(ubus call network.interface.${br_name} status | jsonfilter -e '@.route[*].nexthop' | grep -v '0.0.0.0')

            #wan_ip=$(ubus call network.interface.${br_name} status | jsonfilter -e '@["ipv4-address"][0].address')
            
            echo "wanname "${wanname}
            echo "wan_ip "${wan_ip}

            if [ "$wan_ip" == "" ]; then
                continue
            fi


            # for loop IPERF_PORT

            IPERF_PORT_FROM=5200
            IPERF_PORT_END=5222

            iperf_port=$IPERF_PORT_FROM
            while [[ $iperf_port -le $IPERF_PORT_END ]]
            do
                iperf_port=`expr $iperf_port + 1`

                #iperf3 -c 89.84.1.222 -p 5209  -B 10.100.100.131 -f M  -J 
                iperf_response=$(iperf3 -c ${iperf_ip} -p ${iperf_port}  -B ${wan_ip} -f M  -J) 

                #if error contains, continue to next port 
                error_code=$(echo ${iperf_response} | jsonfilter -e '@["error"]')
                tx_rate=$(echo ${iperf_response} | jsonfilter -e '@["end"]["sum_sent"].bits_per_second')
                rx_rate=$(echo ${iperf_response} | jsonfilter -e '@["end"]["sum_received"].bits_per_second')

                if [ "$error_code" != "" ]; then
                    continue
                fi

                if [[ "$tx_rate" != "" && "$rx_rate" != "" ]]; then
                    tx_rate=$(echo $tx_rate | awk '{printf("%.f\n", $1)}')
                    rx_rate=$(echo $rx_rate | awk '{printf("%.f\n", $1)}')

                    echo $tx_rate
                    echo $rx_rate

                    tx_rate=`expr $tx_rate / 1000`
                    rx_rate=`expr $rx_rate / 1000`

                    echo "tx_rate "${tx_rate}
                    echo "rx_rate "${rx_rate}

                    speedConf=/etc/config/speedtest

                    if [ ! -f  $speedConf ]; then
                        touch $speedConf
                    fi

                    
                    conf_index=$(uci show speedtest | grep .wan_name=${wanname} | cut -d [ -f 2 | cut -d ] -f 1)

                    if [ "$conf_index" == "" ]; then
                        uci add speedtest rule
                        uci set speedtest.@rule[-1].wan_name=$wanname
                        uci set speedtest.@rule[-1].rx_rate=$rx_rate
                        uci set speedtest.@rule[-1].tx_rate=$tx_rate
                    else
                        uci set speedtest.@rule[$conf_index].rx_rate=$rx_rate
                        uci set speedtest.@rule[$conf_index].tx_rate=$tx_rate
                    fi

                    uci commit speedtest

                    curl "http://127.0.0.1:82/cgi-php/bandwidth_config.php?method=SET&action=speedtest&wan_name=${br_name}&rx_rate=${rx_rate}&tx_rate=${tx_rate}"



                    #curl --header "Content-Type: application/json" \
                    # --request POST \
                    # --data '{"username":"xyz","password":"xyz"}' \
                    #http://localhost/cgi-bin/qos_ip_limit

                    break
                fi
            done
            index=$((index + 1));
        done
    fi
}

run_speedtest_cron()
{
    curl "http://127.0.0.1:82/cgi-php/bandwidth_config.php?method=SET&action=speedtest_cron&wan_name=$1"

}



start()
{
    #run_speedtest
    run_speedtest_cron $1
}

