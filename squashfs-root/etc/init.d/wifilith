#!/bin/sh /etc/rc.common

START=96
STOP=98

USE_PROCD=1

need_commit="n"
uci_config_check() {
        [ "$(uci get $1)" != "$2" ] && {
                logger -t witilith "Updating UCI configure $1=$2"
                uci set "$1"="$2"
                need_commit="y"
        }
}

config_check() {
	extiface=`uci get wifilith.guest.extiface`
	uci_config_check "dhcp.fakegoogle" "domain"
	uci_config_check "dhcp.fakegoogle.name" "clients3.google.com"
	uci_config_check "dhcp.fakegoogle.ip" "$(uci get network.${extiface}.ipaddr)"
	
	[ "$need_commit" = "y" ] && {
		uci commit
		/etc/init.d/dnsmasq restart
	}
}

start_service() {
#	config_check
	local type
	local pc_file
	local mobile_file

	[ -d /www-comfast/www ] || ln -s /etc/wifilith/www/ /www-comfast/
	enable_local=`uci get wifilith.guest.enable 2>/dev/null`
	enable_weixin=`uci get wifilith.weixin.enable 2>/dev/null`
	enable_wxpay=`uci get wifilith.wxpay.enable 2>/dev/null`
	enable_traffic=`uci get wifilith.traffic.enable 2>/dev/null`
	enable_account=`uci get wifilith.account.enable 2>/dev/null`
	enable_passwd=`uci get wifilith.passwd.enable 2>/dev/null`
	enable_radius=`uci get wifilith.radius.enable 2>/dev/null`
	portal_iface=`uci get wifilith.guest.extiface 2>/dev/null`
	iface_addr=`uci get network.$portal_iface.ipaddr 2>/dev/null`
	if [ -n "$iface_addr" ];then
		if [ a"$enable_local" == "a1" ] || \
		    [ a"$enable_weixin" == "a1" ] || \
		    [ a"$enable_wxpay" == "a1" ] || \
		    [ a"$enable_traffic" == "a1" ] || \
		    [ a"$enable_account" == "a1" ] || \
		    [ a"$enable_passwd" == "a1" ] || \
		    [ a"$enable_radius" == "a1" ];then
			type=`uci get wifilith.type 2>/dev/null`
			[ -z $type ] && type="local"
			if [ $type == "weixin" ];then
				pc_file="local"
			else
				pc_file=$type
			fi
			mobile_file=$type
			[ a"$enable_radius" == "a1" ] || {
				cp /etc/wifilith/www/$pc_file.html /etc/wifilith/www/pc_page.html
				cp /etc/wifilith/www/$mobile_file.html /etc/wifilith/www/mobile_page.html
			}
			[ -f /tmp/needsleep_wifilith ] && sleep 10
			procd_open_instance
			procd_set_param command /usr/bin/wifilith
			procd_set_param respawn
			procd_close_instance
		else
			echo "" > /var/etc/fans_fcgi.include && /etc/init.d/nginx restart && exit 0
		fi
	fi
	[ -f /tmp/needsleep_wifilith ] && rm -f /tmp/needsleep_wifilith
}

service_triggers()
{
	procd_add_reload_trigger "wifilith"
}

